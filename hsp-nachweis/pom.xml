<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>nachweis-service</artifactId>
    <groupId>staatsbibliothek-berlin.hsp</groupId>
    <version>1.4.114</version>
  </parent>

  <artifactId>hsp-nachweis</artifactId>
  <packaging>jar</packaging>

  <developers>
    <developer>
      <name>Piotr Czarnecki</name>
      <email>piotr.czarnecki@sbb.spk-berlin.de</email>
      <organization>Staatsbibliothek zu Berlin</organization>
      <organizationUrl>http://www.staatsbibliothek-berlin.de</organizationUrl>
    </developer>
    <developer>
      <name>Constantijn Blondel</name>
      <email>Constantijn.Blondel@sbb.spk-berlin.de</email>
      <organization>Staatsbibliothek zu Berlin</organization>
      <organizationUrl>http://www.staatsbibliothek-berlin.de</organizationUrl>
    </developer>
    <developer>
      <name>Marten Christoph</name>
      <email>Christoph.Marten@sbb.spk-berlin.de</email>
      <organization>Staatsbibliothek zu Berlin</organization>
      <organizationUrl>http://www.staatsbibliothek-berlin.de</organizationUrl>
    </developer>
    <developer>
      <name>Konrad Eichst√§dt</name>
      <email>Konrad.Eichstaedt@sbb.spk-berlin.de</email>
      <organization>Staatsbibliothek zu Berlin</organization>
      <organizationUrl>http://www.staatsbibliothek-berlin.de</organizationUrl>
    </developer>
    <developer>
      <name>Udo Boysen</name>
      <email>Udo.Boysen@sbb.spk-berlin.de</email>
      <organization>Staatsbibliothek zu Berlin</organization>
      <organizationUrl>http://www.staatsbibliothek-berlin.de</organizationUrl>
    </developer>
  </developers>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>${quarkus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <!-- Profile for the CI server. -->
    <profile>
      <id>integration</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-jacoco</artifactId>
            <version>${quarkus.version}</version>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>report-aggregate</id>
                <goals>
                  <goal>report-aggregate</goal>
                </goals>
              </execution>
              <execution>
                <id>merge-results</id>
                <phase>verify</phase>
                <goals>
                  <goal>merge</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>${project.build.directory}/*.exec</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                  <destFile>${basedir}${project.build.directory}/jacoco.exec</destFile>
                  <skip>false</skip>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <executions>
              <execution>
                <id>integration-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <testSourceDirectory>src/integration-test/java</testSourceDirectory>
                  <systemPropertyVariables>
                    <eureka.registration.enabled>false</eureka.registration.enabled>
                  </systemPropertyVariables>
                  <dependenciesToScan>staatsbibliothek-berlin.hsp:nachweis-service</dependenciesToScan>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${build-helper-maven-plugin.version}</version>
            <executions>
              <!-- Add a new source directory to our build -->
              <execution>
                <id>add-integration-test-sources</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <!-- Configures the source directory of our integration tests -->
                  <sources>
                    <source>src/integration-test/java</source>
                  </sources>
                </configuration>
              </execution>
              <!-- Add a new resource directory to our build -->
              <execution>
                <id>add-integration-test-resources</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>add-test-resource</goal>
                </goals>
                <configuration>
                  <!-- Configures the resource directory of our integration tests -->
                  <resources>
                    <!--
                        Placeholders that are found from the files located in the configured resource
                        directories are replaced with the property values found from the profile
                        specific configuration file.
                    -->
                    <resource>
                      <filtering>true</filtering>
                      <directory>src/integration-test/resources</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deb</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <sign.package>false</sign.package>
        <maven.javadoc.skip>false</maven.javadoc.skip>
        <maven.site.skip>true</maven.site.skip>
        <maven.source.skip>false</maven.source.skip>
        <skipITs>true</skipITs>
        <quarkus.package.uber-jar>false</quarkus.package.uber-jar>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-maven-plugin</artifactId>
            <version>${quarkus.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven-antrun-plugin.version}</version>
            <executions>
              <execution>
                <id>addScript</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <concat destfile="${project.build.directory}/${project.artifactId}-service.jar"
                      binary="yes">
                      <fileset dir="${basedir}/src/deb/files/">
                        <include name="${project.artifactId}.sh"/>
                      </fileset>
                      <fileset dir="${project.build.directory}/quarkus-app/">
                        <include name="quarkus-run.jar"/>
                      </fileset>
                    </concat>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>jdeb</artifactId>
            <groupId>org.vafer</groupId>
            <version>${jdeb.version}</version>
            <executions>
              <execution>
                <phase>package</phase>
                <id>${project.artifactId}</id>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <configuration>
                  <name>Staatsbibliothek zu Berlin - ${project.artifactId} -</name>
                  <classifier>core</classifier>
                  <controlDir>${basedir}/src/deb/${project.artifactId}</controlDir>
                  <deb>${project.build.directory}/${project.artifactId}_${project.version}_all.deb
                  </deb>
                  <snapshotExpand>true</snapshotExpand>
                  <signPackage>${sign.package}</signPackage>
                  <signMethod>dpkg-sig</signMethod>
                  <signRole>builder</signRole>
                  <dataSet>
                    <data>
                      <type>template</type>
                      <paths>
                        <path>/etc/SBB/${project.artifactId}</path>
                        <path>/var/lib/SBB/${project.artifactId}</path>
                        <path>/data/log/${project.artifactId}</path>
                        <path>/var/run/SBB/${project.artifactId}</path>
                      </paths>
                    </data>
                    <data>
                      <src>${project.build.directory}/${project.artifactId}-service.jar</src>
                      <type>file</type>
                      <mapper>
                        <type>perm</type>
                        <prefix>/usr/local/SBB/usr/local/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>755</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/quarkus-app/lib/boot</src>
                      <type>directory</type>
                      <includes>*.jar, *.zip</includes>
                      <mapper>
                        <type>perm</type>
                        <filemode>664</filemode>
                        <dirmode>774</dirmode>
                        <strip>1</strip>
                        <prefix>/usr/local/SBB/usr/local/${project.artifactId}/lib/boot</prefix>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/quarkus-app/lib/main</src>
                      <type>directory</type>
                      <includes>*.jar, *.zip</includes>
                      <mapper>
                        <type>perm</type>
                        <filemode>664</filemode>
                        <dirmode>774</dirmode>
                        <strip>1</strip>
                        <prefix>/usr/local/SBB/usr/local/${project.artifactId}/lib/main</prefix>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/quarkus-app/app</src>
                      <type>directory</type>
                      <includes>*.jar, *.zip</includes>
                      <mapper>
                        <type>perm</type>
                        <filemode>664</filemode>
                        <dirmode>774</dirmode>
                        <strip>1</strip>
                        <prefix>/usr/local/SBB/usr/local/${project.artifactId}/app</prefix>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/quarkus-app/quarkus</src>
                      <type>directory</type>
                      <includes>*.jar, *.zip, *.dat</includes>
                      <mapper>
                        <type>perm</type>
                        <filemode>664</filemode>
                        <dirmode>774</dirmode>
                        <strip>1</strip>
                        <prefix>/usr/local/SBB/usr/local/${project.artifactId}/quarkus</prefix>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/src/deb/files/${project.artifactId}.conf</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-dev.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-dev-linux.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-docker-local.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-prod.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-stage.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-test.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/application-testsystem.yml</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${project.build.directory}/classes/eureka-client.properties</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/SBB/${project.artifactId}</prefix>
                        <user>${project.artifactId}</user>
                        <group>${project.artifactId}</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/src/deb/files/${project.artifactId}.logrotate</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/logrotate.d</prefix>
                        <user>root</user>
                        <group>root</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <src>${basedir}/src/deb/files/${project.artifactId}-tmpfiles.conf</src>
                      <type>file</type>
                      <conffile>true</conffile>
                      <mapper>
                        <type>perm</type>
                        <prefix>/etc/tmpfiles.d</prefix>
                        <user>root</user>
                        <group>root</group>
                        <filemode>644</filemode>
                      </mapper>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/etc/init.d/${project.artifactId}</linkName>
                      <linkTarget>
                        /usr/local/SBB/usr/local/${project.artifactId}/${project.artifactId}-service.jar
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/${project.artifactId}-service.conf
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/${project.artifactId}.conf
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application.yml</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application-dev.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-dev.yml</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application-dev-linux.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-dev-linux.yml
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application-docker-local.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-docker-local.yml
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application-prod.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-prod.yml</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application-stage.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-stage.yml</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application-test.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-test.yml</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/application-testsystem.yml
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/application-testsystem.yml
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/config/eureka-client.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/eureka-client.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>
                        /usr/local/SBB/usr/local/${project.artifactId}/eureka-client.properties
                      </linkName>
                      <linkTarget>/etc/SBB/${project.artifactId}/eureka-client.properties
                      </linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/etc/SBB/${project.artifactId}/${project.artifactId}.logrotate
                      </linkName>
                      <linkTarget>/etc/logrotate.d/${project.artifactId}.logrotate</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/etc/SBB/${project.artifactId}/${project.artifactId}-tmpfiles.conf
                      </linkName>
                      <linkTarget>/etc/tmpfiles.d/${project.artifactId}-tmpfiles.conf</linkTarget>
                    </data>
                    <data>
                      <type>link</type>
                      <symlink>true</symlink>
                      <linkName>/var/log/SBB/${project.artifactId}</linkName>
                      <linkTarget>/data/log/${project.artifactId}</linkTarget>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jdeb</goal>
                </goals>
                <id>${project.artifactId}-all</id>
                <configuration>
                  <name>Staatsbibliothek zu Berlin - ${project.artifactId}
                    Paket h√§ngt von allen Komponenten
                  </name>
                  <classifier>all</classifier>
                  <deb>
                    ${project.build.directory}/${project.artifactId}-all_${project.version}_all.deb
                  </deb>
                  <controlDir>${basedir}/src/deb/${project.artifactId}-all-metapackage</controlDir>
                  <snapshotExpand>true</snapshotExpand>
                  <signPackage>${sign.package}</signPackage>
                  <signMethod>dpkg-sig</signMethod>
                  <signRole>builder</signRole>
                  <dataSet>
                    <data>
                      <type>template</type>
                      <paths>
                        <path>/var/run/${project.artifactId}-all</path>
                      </paths>
                    </data>
                  </dataSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources-filtered</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.smallrye</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
        <version>${jandex-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>make-index</id>
            <goals>
              <goal>jandex</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.hibernate.orm.tooling</groupId>
        <artifactId>hibernate-enhance-maven-plugin</artifactId>
        <version>${hibernate-core.version}</version>
        <executions>
          <execution>
            <configuration>
              <enableLazyInitialization>true</enableLazyInitialization>
            </configuration>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>1.6.3</version>
        <executions>
          <execution>
            <id>download-erfassung</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>
                https://artefakt.dev.sbb.berlin/repository/sbb-npm-releases/hsp-erfassung/-/hsp-erfassung-0.0.105.tgz
              </url>
              <unpack>true</unpack>
              <failOnError>true</failOnError>
              <retries>3</retries>
              <followRedirects>true</followRedirects>
              <skipCache>true</skipCache>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>${copy-rename-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>copy-file</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${project.build.directory}/package/dist/erfassung.js</sourceFile>
              <destinationFile>
                ${project.build.directory}/classes/META-INF/resources/js/erfassung.js
              </destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>staatsbibliothek-berlin</groupId>
      <artifactId>oauth2</artifactId>
      <version>${oauth2.version}</version>
    </dependency>
    <dependency>
      <groupId>staatsbibliothek-berlin.hsp</groupId>
      <artifactId>domainmodel</artifactId>
      <version>${nachweis-service.version}</version>
    </dependency>
    <dependency>
      <groupId>staatsbibliothek-berlin.hsp</groupId>
      <artifactId>domainmodel-tei-mapper</artifactId>
      <version>${nachweis-service.version}</version>
    </dependency>
    <dependency>
      <groupId>de.staatsbibliothek-berlin.hsp</groupId>
      <artifactId>activitystreams-hsp</artifactId>
      <version>${hsp-messaging.version}</version>
    </dependency>

    <dependency>
      <groupId>de.staatsbibliothek-berlin.hsp</groupId>
      <artifactId>tei-jaxb</artifactId>
      <version>${hsp-messaging.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>
      <artifactId>myfaces-quarkus</artifactId>
      <version>${myfaces.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.myfaces.core.extensions.quarkus</groupId>
      <artifactId>myfaces-quarkus-deployment</artifactId>
      <version>${myfaces.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.myfaces.core</groupId>
      <artifactId>myfaces-api</artifactId>
      <version>${myfaces.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.myfaces.core</groupId>
      <artifactId>myfaces-impl</artifactId>
      <version>${myfaces.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>

    <dependency>
      <groupId>com.io-informatics.oss</groupId>
      <artifactId>jackson-jsonld</artifactId>
      <version>${jackson-jsonld.version}</version>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-core</artifactId>
    </dependency>

    <!-- DB Dependencies START-->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm-panache</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-narayana-jta</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>quarkus-local-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-h2</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-flyway</artifactId>
    </dependency>

    <!-- DB Dependencies END-->

    <!-- SOLRJ dependencies START-->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <version>${solr-solrj.version}</version>
    </dependency>
    <!-- SOLRJ dependencies END-->

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kafka-client</artifactId>
    </dependency>

    <dependency>
      <artifactId>jackson-annotations</artifactId>
      <groupId>com.fasterxml.jackson.core</groupId>
    </dependency>
    <dependency>
      <groupId>org.primefaces</groupId>
      <artifactId>primefaces</artifactId>
      <version>${primefaces.version}</version>
    </dependency>
    <dependency>
      <groupId>org.primefaces.themes</groupId>
      <artifactId>all-themes</artifactId>
      <version>${all-themes.version}</version>
    </dependency>
    <dependency>
      <groupId>org.primefaces</groupId>
      <artifactId>ultima</artifactId>
      <version>${ultima.version}</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jackson</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-multipart</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jaxb</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-vertx</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-config-yaml</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-client</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-fault-tolerance</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-common</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.albfernandez</groupId>
      <artifactId>juniversalchardet</artifactId>
      <version>${juniversalchardet.version}</version>
    </dependency>

    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito-core.version}</version>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-panache-mock</artifactId>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-junit-platform</artifactId>
      <version>${maven-surefire-plugin.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8-standalone</artifactId>
      <scope>test</scope>
      <version>${wiremock-jre8.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito-inline.version}</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>${xmlunit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.daisy.libs</groupId>
      <artifactId>jing</artifactId>
      <version>${jing.version}</version>
    </dependency>

    <dependency>
      <groupId>de.digitalcollections.iiif</groupId>
      <artifactId>iiif-apis</artifactId>
      <version>${iiif-apis.version}</version>
    </dependency>

    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>${Saxon-HE.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.slf4j</groupId>
      <artifactId>slf4j-jboss-logmanager</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.dreamhead</groupId>
      <artifactId>moco-core</artifactId>
      <version>${moco-core.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jacoco</artifactId>
      <version>${quarkus.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
</project>
