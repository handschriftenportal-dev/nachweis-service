<?xml version="1.0" encoding="UTF-8"?>

<!--
  - MIT License
  -
  - Copyright (c) 2023 Staatsbibliothek zu Berlin - PreuÃŸischer Kulturbesitz
  -
  - Permission is hereby granted, free of charge, to any person obtaining a copy
  - of this software and associated documentation files (the "Software"), to deal
  - in the Software without restriction, including without limitation the rights
  - to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  - copies of the Software, and to permit persons to whom the Software is
  - furnished to do so, subject to the following conditions:
  -
  - The above copyright notice and this permission notice shall be included in all
  - copies or substantial portions of the Software.
  -
  - THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  - IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  - LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  - SOFTWARE.
  -->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                template="../templates/default.xhtml">
    <ui:define name="content">
        <div class="ui-g">

            <ui:include src="../templates/datatype/header.xhtml">
                <ui:param name="title" value="#{msg.document_titel_personen}"/>
                <ui:param name="access" value="#{normdatenRechte.kannAlsListeAnzeigen()}"/>
            </ui:include>

            <h:form id="personenform" rendered="#{normdatenRechte.kannAlsListeAnzeigen()}">
                <div class="ui-g-12 actionsBar" id="personenactions">
                    <p:commandButton id="refreshButton"
                                     action="#{personModel.resetTable}"
                                     update="personenform"
                                     icon="hsp-icon-undo_table">
                        <p:tooltip id="refreshButtonTip" for="refreshButton" position="top"
                                   value="#{msg.table_reset_layout_to_defaults}"/>
                    </p:commandButton>

                    <p:commandButton id="togglerPersonenTable" type="button"
                                     icon="hsp-icon-edit_table">
                        <p:tooltip id="togglerPersonenTableTip" for="togglerPersonenTable"
                                   position="top"
                                   value="#{msg.table_toggle_visable_columns}"/>
                    </p:commandButton>

                    <p:commandButton id="excelDownloadCommandLinkID" icon="hsp-icon-download_file"
                                     ajax="false"
                                     disabled="#{not normdatenRechte.kannAlsExcelRunterladen()}">
                        <p:tooltip for="excelDownloadCommandLinkID" position="top"
                                   value="#{msg.datenuebernahme_tooltip_excel}"/>
                        <p:dataExporter type="xls" target="personenTable" fileName="PersonenTabelle"
                                        pageOnly="false"/>
                    </p:commandButton>

                    <p:commandButton id="personenImportierenButton"
                                     action="/dateiupload.xhtml?faces-redirect=true&amp;dokumentTyp=PERSON"
                                     icon="ui-icon-upload_file"
                                     process="@this"
                                     onstart="PF('statusDialog').show()"
                                     onsuccess="PF('statusDialog').hide()"
                                     disabled="#{not importRechte.kannPersonManuellImportieren()}">
                        <p:tooltip for="personenImportierenButton" position="top"
                                   value="#{msg.personen_importieren}"/>
                    </p:commandButton>

                    <p:commandButton id="neuePersonButton"
                                     update="@all" process="@all"
                                     icon="ui-icon-add"
                                     disabled="true">
                        <p:tooltip for="neuePersonButton" position="top"
                                   value="#{msg.person_neuanlegen}"/>
                    </p:commandButton>
                </div>

                <div class="ui-g-12">
                    <p:columnToggler id="columntogglerPersonenTable" datasource="personenTable"
                                     trigger="personenform:togglerPersonenTable">
                        <p:ajax event="toggle" listener="#{personModel.onToggleColumns}"/>
                    </p:columnToggler>

                    <p:dataTable var="person" value="#{personModel.normdatenPersonViews}"
                                 emptyMessage="#{msg.person_find_no_person}"
                                 id="personenTable"
                                 widgetVar="personTableWidget"
                                 rowKey="#{person.id}"
                                 rows="#{personModel.currentHitProPage}"
                                 first="#{personModel.currentPage}"
                                 ajax="true"
                                 paginator="true"
                                 filteredValue="#{personModel.filteredPersons}"
                                 multiViewState="true"
                                 reflow="true"
                                 sortMode="multiple"
                                 sortBy="#{personModel.sortMetaColumns.values()}"
                                 resizableColumns="true"
                                 liveResize="true"
                                 draggableColumns="true"
                                 tableStyle="'width:auto'"
                                 paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                                 currentPageReportTemplate="{startRecord}-{endRecord} #{msg.paginator_of} {totalRecords} #{msg.paginator_records}"
                                 rowsPerPageTemplate="#{personModel.allPossibleHitProPage}"
                                 paginatorPosition="top"
                                 paginatorAlwaysVisible="true"
                                 liveScroll="true"
                                 style="width: auto !important;"
                                 pageLinks="5">

                        <p:ajax event="sort" listener="#{personModel.onSort}"/>
                        <p:ajax event="filter" partialSubmit="true" ignoreAutoUpdate="true"/>
                        <p:ajax event="colReorder" listener="#{personModel.columnsReordered}"/>
                        <p:ajax event="colResize" listener="#{personModel.columnsResized}"/>

                        <c:forEach items="#{personModel.positionColumnIDs}" var="columnID">
                            <c:choose>
                                <c:when test="#{columnID eq 'name'}">
                                    <p:column id="#{columnID}"
                                              width="#{personModel.getColumnWidth(0)}"
                                              visible="true"
                                              toggleable="false"
                                              headerText="#{msg.person_ansetzung}"
                                              filterBy="#{person.name}"
                                              filterMatchMode="contains"
                                              sortBy="#{person.name}">
                                        <p:link outcome="person.xhtml?faces-redirect=true"
                                                value="#{person.name}">
                                            <f:param name="id" value="#{person.id}"/>
                                        </p:link>
                                    </p:column>
                                </c:when>
                                <c:when test="#{columnID eq 'varianteNamen'}">
                                    <ui:param name="varianteNamen"
                                              value="#{person.varianteNamenAlsString}"/>
                                    <p:column id="#{columnID}"
                                              width="#{personModel.getColumnWidth(1)}"
                                              visible="#{personModel.isColumnVisible(1)}"
                                              filterMatchMode="contains"
                                              filterBy="#{varianteNamen}"
                                              sortBy="#{varianteNamen}"
                                              headerText="#{msg.person_alternativenamen}">
                                        <h:outputText escape="false" style="white-space:normal"
                                                      value="#{varianteNamen}"/>
                                    </p:column>
                                </c:when>
                                <c:when test="#{columnID eq 'personId'}">
                                    <p:column id="#{columnID}"
                                              width="#{personModel.getColumnWidth(2)}"
                                              visible="#{personModel.isColumnVisible(2)}"
                                              sortBy="#{person.id}"
                                              filterBy="#{person.id}"
                                              filterMatchMode="contains"
                                              headerText="#{msg.person_id}">
                                        <h:outputText style="white-space: pre-wrap;"
                                                      value="#{person.id}"/>
                                    </p:column>
                                </c:when>
                                <c:when test="#{columnID eq 'gndID'}">
                                    <p:column id="#{columnID}"
                                              width="#{personModel.getColumnWidth(3)}"
                                              visible="#{personModel.isColumnVisible(3)}"
                                              sortBy="#{person.gndID}"
                                              filterBy="#{person.gndID}"
                                              filterMatchMode="contains"
                                              headerText="#{msg.person_gnd}">
                                        <p:link target="_blank"
                                                href="#{person.gndUrl}"
                                                value="#{person.gndID}"
                                                rendered="#{not empty person.gndID}">
                                        </p:link>
                                    </p:column>
                                </c:when>
                            </c:choose>
                        </c:forEach>
                    </p:dataTable>
                </div>
            </h:form>
        </div>
    </ui:define>
</ui:composition>
