/*
 * MIT License
 *
 * Copyright (c) 2023 Staatsbibliothek zu Berlin - Preu√üischer Kulturbesitz
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package de.staatsbibliothek.berlin.hsp.nachweis.infrastructure.kafka;

import static de.staatsbibliothek.berlin.hsp.messaging.activitystreams.api.model.enums.ActivityStreamsDokumentTyp.BESCHREIBUNG;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import de.staatsbibliothek.berlin.hsp.domainmodel.aggregates.Beschreibung;
import de.staatsbibliothek.berlin.hsp.mapper.tei.TEI2BeschreibungMapper;
import de.staatsbibliothek.berlin.hsp.messaging.activitystreams.api.model.ActivityStream;
import de.staatsbibliothek.berlin.hsp.messaging.activitystreams.api.model.ActivityStreamObject;
import de.staatsbibliothek.berlin.hsp.messaging.objectfactory.TEIObjectFactory;
import java.io.ByteArrayInputStream;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.tei_c.ns._1.TEI;

/**
 * Created by konrad.eichstaedt@sbb.spk-berlin.de on 06.06.2019.
 */

public class KafkaActivityStreamMessageDeserializerTest {

  private static final String JSON_KAFKA_MESSAGE_V1_0_3 = "{\n"
      + "  \"objects\": [\n"
      + "      {\n"
      + "        \"id\": null,\n"
      + "        \"groupId\": null,\n"
      + "        \"name\": null,\n"
      + "        \"version\": \"5.0\",\n"
      + "        \"compressed\": true,\n"
      + "        \"@type\": \"hspobject\",\n"
      + "        \"type\": \"BESCHREIBUNG\",\n"
      + "        \"url\": \"http://b-dev1047.pk.de:9296/import/job/7a5075d0-908f-403e-ae48-525fe618359a\",\n"
      + "        \"content\": \"\"\n"
      + "      }\n"
      + "  ],\n"
      + "  \"actor\": {\n"
      + "    \"@type\": \"hspactor\",\n"
      + "    \"type\": null,\n"
      + "    \"id\": null,\n"
      + "    \"name\": \"Torsten Schassan\",\n"
      + "    \"url\": null\n"
      + "  },\n"
      + "  \"target\": {\n"
      + "    \"id\": \"17f29b9a-81f2-43eb-9499-6fb983b23509\",\n"
      + "    \"name\": \"tei-msDesc_Haertel.xml\",\n"
      + "    \"type\": null,\n"
      + "    \"@type\": \"hsptarget\"\n"
      + "  },\n"
      + "  \"@context\": null,\n"
      + "  \"id\": \"17f29b9a-81f2-43eb-9499-6fb983b23509\",\n"
      + "  \"action\": \"ADD\",\n"
      + "  \"@type\": \"hspmessage\",\n"
      + "  \"published\": null,\n"
      + "  \"summary\": null,\n"
      + "  \"version\": \"1.0\"\n"
      + "}\n";

  @Test
  public void test_GivenJSONByte_CreateActivityStreamMessage() throws Exception {

    KafkaActivityStreamMessageDeserializer deserializer = new KafkaActivityStreamMessageDeserializer();

    ActivityStream message = deserializer
        .deserialize("import", JSON_KAFKA_MESSAGE_V1_0_3.getBytes());

    assertNotNull(message);

    Assertions.assertEquals(1, message.getObjects().size());

    TEI2BeschreibungMapper mapper = new TEI2BeschreibungMapper();

    ActivityStreamObject activityStreamObject = message.getObjects().get(0);
    Assertions.assertEquals(BESCHREIBUNG, activityStreamObject.getType());
    List<TEI> teiList = TEIObjectFactory.unmarshal(new ByteArrayInputStream(activityStreamObject.getContent()));
    List<Beschreibung> beschreibungList = mapper.map(teiList.get(0));
    Assertions.assertEquals(1, beschreibungList.size());
    Beschreibung beschreibung = beschreibungList.get(0);

    assertNotNull(beschreibung.getId());

    beschreibung.getExterneIDs().stream().findFirst().ifPresent(r -> {
      assertEquals("mss_32-helmst_tei-msDesc_Haertel", r.getUrl());
    });
  }
}
